AWSTemplateFormatVersion: "2010-09-09"
Description: "DynamoDB to GitHub Sync Infrastructure for OpenMed"

Parameters:
  GitHubToken:
    Type: String
    Description: GitHub Personal Access Token
    NoEcho: true

  GitHubRepo:
    Type: String
    Default: "FormidableCare/OpenMed-Data"
    Description: GitHub repository (owner/repo)

  GitHubBranch:
    Type: String
    Default: "main"
    Description: GitHub branch name

  DynamoDBTableName:
    Type: String
    Default: "openmed-medications"
    Description: DynamoDB table name for medications

Resources:
  # DynamoDB Table
  MedicationsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref DynamoDBTableName
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      StreamSpecification:
        StreamEnabled: true
        StreamViewType: NEW_AND_OLD_IMAGES
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true

  # IAM Role for Lambda
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaDynamoDBExecutionRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Scan
                  - dynamodb:Query
                Resource: !GetAtt MedicationsTable.Arn

  # Lambda Function
  DynamoDBGitHubSyncFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: openmed-dynamodb-github-sync
      Runtime: python3.9
      Handler: dynamodb-github-sync.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          import json
          def lambda_handler(event, context):
              return {
                  'statusCode': 200,
                  'body': json.dumps('Function deployed successfully')
              }
      Environment:
        Variables:
          GITHUB_TOKEN: !Ref GitHubToken
          GITHUB_REPO: !Ref GitHubRepo
          GITHUB_BRANCH: !Ref GitHubBranch
          GITHUB_USER: "OpenMed"
          GITHUB_EMAIL: "system@openmed.formidable.care"
          DYNAMODB_TABLE: !Ref DynamoDBTableName
      Timeout: 300
      MemorySize: 512

  # Lambda Permission for DynamoDB Streams
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref DynamoDBGitHubSyncFunction
      Action: lambda:InvokeFunction
      Principal: dynamodb.amazonaws.com
      SourceArn: !GetAtt MedicationsTable.StreamArn

  # DynamoDB Stream to Lambda Trigger
  DynamoDBStreamTrigger:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn: !GetAtt MedicationsTable.StreamArn
      FunctionName: !Ref DynamoDBGitHubSyncFunction
      StartingPosition: LATEST
      BatchSize: 10
      MaximumBatchingWindowInSeconds: 5

  # CloudWatch Log Group
  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${DynamoDBGitHubSyncFunction}"
      RetentionInDays: 14

  # S3 Bucket for Lambda Code (optional, for larger deployments)
  LambdaCodeBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "openmed-lambda-code-${AWS::AccountId}"
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            Status: Enabled
            NoncurrentVersionExpirationInDays: 30

Outputs:
  DynamoDBTableName:
    Description: Name of the DynamoDB table
    Value: !Ref MedicationsTable
    Export:
      Name: !Sub "${AWS::StackName}-TableName"

  DynamoDBTableArn:
    Description: ARN of the DynamoDB table
    Value: !GetAtt MedicationsTable.Arn
    Export:
      Name: !Sub "${AWS::StackName}-TableArn"

  LambdaFunctionName:
    Description: Name of the Lambda function
    Value: !Ref DynamoDBGitHubSyncFunction
    Export:
      Name: !Sub "${AWS::StackName}-LambdaFunction"

  LambdaFunctionArn:
    Description: ARN of the Lambda function
    Value: !GetAtt DynamoDBGitHubSyncFunction.Arn
    Export:
      Name: !Sub "${AWS::StackName}-LambdaArn"
